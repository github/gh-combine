#!/usr/bin/env bash

set -euo pipefail

source script/env "$@"

# Get build information for embedding into binary
COMMIT_SHA="$(git rev-parse HEAD)"
BUILD_TIME="$(date -u '+%Y-%m-%dT%H:%M:%SZ')"

#go build -mod=vendor -ldflags "-X github.com/github/gh-combine/internal/version.commit=${COMMIT_SHA} -X github.com/github/gh-combine/internal/version.buildTime=${BUILD_TIME}" -v ./cmd/gh-combine

goreleaser check

# Check if --release flag is passed
if [[ " $* " == *" --release "* ]]; then
  # Remove --release from arguments and run goreleaser in release mode
  args=("$@")
  filtered_args=()
  for arg in "${args[@]}"; do
    if [[ "$arg" != "--release" ]]; then
      filtered_args+=("$arg")
    fi
  done
  
  goreleaser release --clean "${filtered_args[@]}"
else
  # Default: Pass all arguments through to goreleaser build in snapshot mode
  goreleaser build --snapshot --clean "$@"
fi

if [[ "$CI" == "true" ]]; then
  tree -L 2 -a --dirsfirst -C -F -h -D dist/
  echo "artifact_dir=dist" >> $GITHUB_OUTPUT
fi

echo -e "${GREEN}Build completed successfully!${OFF}"
