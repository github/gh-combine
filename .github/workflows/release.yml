name: release

on:
  push:
    tags:
      - "*"

permissions: {}

jobs:
  release:
    if: github.repository == 'github/gh-combine'
    permissions:
      contents: write
    runs-on: ubuntu-latest
    outputs:
      artifact-id: ${{ steps.upload-artifact.outputs.artifact-id }}

    steps:
      - name: checkout
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # pin@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: setup go
        uses: actions/setup-go@c0137caad775660c0844396c52da96e560aba63d # pin@v5
        with:
          go-version-file: "go.mod"
          cache: false

      - name: bootstrap
        run: script/bootstrap

      - name: goreleaser
        uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a # pin@v6
        with:
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: upload artifact
        uses: actions/upload-artifact@v4.6.2
        id: upload-artifact
        with:
          path: dist/

  sign:
    needs: release
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      attestations: write
      contents: read
    steps:
      - uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0
        with:
          artifact-ids: ${{ needs.release.outputs.artifact-id }}

      - name: attest build provenance
        uses: actions/attest-build-provenance@v3.0.0
        with:
          subject-path: "."

  verify:
    permissions: {}
    runs-on: ubuntu-latest
    needs: [release, sign]
    steps:
      - uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0
        with:
          artifact-ids: ${{ needs.release.outputs.artifact-id }}

      - name: verify
        env:
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ github.event.repository.name }}
          ARTIFACT_PATH: "."
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Scanning for files in $ARTIFACT_PATH"

          # Find all regular files in the artifact path recursively
          find "$ARTIFACT_PATH" -type f | while read -r file; do
            echo "Verifying file: $file"
            
            # Log the command that will be executed
            echo "Executing command: gh attestation verify \"$file\" --repo ${OWNER}/${REPO} --signer-workflow ${OWNER}/${REPO}/.github/workflows/release.yml"
            
            # Run the command
            gh attestation verify "$file" --repo ${OWNER}/${REPO} --signer-workflow ${OWNER}/${REPO}/.github/workflows/release.yml
          done
